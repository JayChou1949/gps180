<template>
  <div class="mod-config">
    <el-form :inline="true" :model="dataForm" @keyup.enter.native="getDataList()">
      <el-form-item>
        <el-input v-model="dataForm.key" placeholder="参数名" clearable></el-input>
      </el-form-item>
      <el-form-item>
        <el-button @click="getDataList()">查询</el-button>
        <el-button v-if="isAuth('${moduleName}:${pathName}:save')" type="primary" @click="addOrUpdateHandle()">新增</el-button>
        <el-button v-if="isAuth('${moduleName}:${pathName}:delete')" type="danger" @click="deleteHandle()" :disabled="dataListSelections.length <= 0">批量删除</el-button>
      </el-form-item>
    </el-form>
    <el-table :data="dataList" border v-loading="dataListLoading"
      @selection-change="selectionChangeHandle" @sort-change='sortChangeHandle' style="width: 100%;">
      <el-table-column type="selection" header-align="center" align="center" width="50"></el-table-column>
#foreach($column in $columns)
      <el-table-column prop="${column.attrname}" header-align="center" align="center" label="${column.comments}"></el-table-column>
#end
      <el-table-column fixed="right" header-align="center" align="center" width="150" label="操作">
        <template slot-scope="scope">
          <el-button type="text" size="small" @click="addOrUpdateHandle(scope.row.${pk.attrname})">修改</el-button>
          <el-button type="text" size="small" @click="deleteHandle(scope.row.${pk.attrname})">删除</el-button>
        </template>
      </el-table-column>
    </el-table>
    <el-pagination
      @size-change="sizeChangeHandle" @current-change="currentChangeHandle"
      :current-page="listQuery.pageNum"
      :page-sizes="[10, 20, 50, 100]"
      :page-size="pageSize"
      :total="totalPage"
      layout="total, sizes, prev, pager, next, jumper">
    </el-pagination>
    <!-- 弹窗, 新增 / 修改 -->
    <${tableName}-form v-if="addOrUpdateVisible" ref="addOrUpdate" @refreshDataList="getDataList"/>
  </div>
</template>

<script>
  export default {
    mounted() {
    },
    activated () {
      this.getDataList()
    },
    components: {
      ${className}Form: () => import('./${className}Form')
    },
    data () {
      return {
        dataForm: {
          key: ''
        },
        dataList: [],
        listQuery: {
          pageNum: 1,
          pageSize: 10,
          sort: null,
          order: null,
          // params: null,
        },
        totalPage: 0,
        dataListLoading: false,
        dataListSelections: [],
        addOrUpdateVisible: false
      }
    },
    methods: {
      // 获取数据列表
      getDataList () {
        this.dataListLoading = true
        #[[this.$api.sys]]#.get${className}List(this.listQuery)
                 .then((res) => {
                  if (res && res.code === 0) {
                    this.dataList = res.data.list
                    this.totalPage = res.data.totalCount
                  } else {
                    this.dataList = []
                    this.totalPage = 0
                    #[[this.$message.error(res.msg)]]#
                  }
                })
                .finally(() => {
                  this.dataListLoading = false
                })
      },
      // 每页数
      sizeChangeHandle (val) {
        this.listQuery.pageSize = val
        this.listQuery.pageNum = 1
        this.getDataList()
      },
      // 当前页
      currentChangeHandle (val) {
        this.listQuery.pageNum = val
        this.getDataList()
      },
      sortChangeHandle(column) {
        this.listQuery.sort = column.prop
        this.listQuery.order = column.order === 'descending' ? 'DESC' : 'ASC'
        this.getDataList()
      },
      // 多选
      selectionChangeHandle (val) {
        this.dataListSelections = val
      },
      // 新增 / 修改
      addOrUpdateHandle (id) {
        this.addOrUpdateVisible = true
        #[[this.$nextTick(() => {]]#
          this.$refs.addOrUpdate.init(id)
        })
      },
      // 删除
      deleteHandle (id) {
        var ids = id ? [id] : this.dataListSelections.map(item => {
          return item.${pk.attrname}
        })
        #[[this.$confirm(`确定对[id=${ids.join(',')}]进行[${id ? '删除' : '批量删除'}]操作?`, '提示', {]]#
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning'
        }).then(() => {
          #[[this.$api.sys]]#.delete${className}(id)
                  .then((res) => {
                    if (res && res.code === 0) {
                      #[[this.$message]]#.success('操作成功')
                      this.getDataList()
                    } else {
                      #[[this.$message.error(res.msg)]]#
                    }
                  })
        })
      }
    }
  }
</script>
